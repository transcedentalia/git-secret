.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "GIT\-SECRET\-TELL" "1" "May 2016" "" ""
.
.SH "NAME"
\fBgit\-secret\-tell\fR \- adds a person, who can access private data\.
.
.SH "SYNOPSIS"
.
.nf

git secret tell [\-m] [\-d dir] [email]
.
.fi
.
.SH "DESCRIPTION"
\fBgit\-secret\-tell\fR receives an email address as an input, searches for the \fBgpg\fR\-key in the \fBgpg\fR\'s \fBhomedir\fR by this email, then imports a person\'s public key into the \fBgit\-secret\fR\'s inner keychain\. From this moment this person can encrypt new files with the keyring which contains their key\. But they cannot decrypt the old files, which were already encrypted without their key\. They should be reencrypted with the new keyring by someone, who has the unencrypted files\.
.
.P
\fBDo not manually import secret key into \fBgit\-secret\fR\fR\. Anyways, it won\'t work with any of the secret\-keys imported\.
.
.SH "OPTIONS"
.
.nf

\-m  \- takes your current `git config user\.email` as an identifier for the key\.
\-d  \- specifies `\-\-homedir` option for the `gpg`, basically use this option if your store your keys in a custom location\.
\-h  \- shows help\.
.
.fi
.
.SH "SEE ALSO"
git\-secret\-init(1), git\-secret\-add(1), git\-secret\-hide(1), git\-secret\-reveal(1)
